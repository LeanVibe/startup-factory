[project]
name = "neoforge"
version = "0.1.0"
description = "NeoForge Backend"
authors = [
    { name = "Bogdan Ponomarenko", email = "ponomarenkobogdan@gmail.com" }
]
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.27.1",
    "sqlalchemy>=2.0.27",
    "alembic>=1.13.1",
    "asyncpg>=0.29.0",
    "python-jose>=3.3.0",
    "passlib>=1.7.4",
    "python-multipart>=0.0.9",
    "email-validator>=2.1.0.post1",
    "pydantic>=2.6.1",
    "pydantic-settings>=2.1.0",
    "mlflow>=2.11.3",
    "httpx>=0.27.0",
    "redis>=5.0.1",
    "structlog>=24.1.0",
    "sqlmodel>=0.0.14",
    "fastapi-mail>=1.4.1",
    "jinja2>=3.1.3",
    "aiosmtplib>=2.0.2",
    "blinker>=1.9.0",
    "celery>=5.3.6",
    "psycopg2-binary>=2.9.9",
    "pydantic-extra-types>=2.4.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-testmon>=2.1.0",
    "pytest-env>=1.1.3",
    "factory-boy>=3.3.0",
    "faker>=22.6.0",
    "coverage>=7.4.1",
    "black>=24.1.1",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "ruff>=0.2.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=app --cov-report=term-missing"
env = [
    "TESTING=True",
    "DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/test",
    "REDIS_URL=redis://redis:6379/0",
]

[tool.coverage.run]
source = ["app"]
omit = ["tests/*"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
check_untyped_defs = false

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
] 